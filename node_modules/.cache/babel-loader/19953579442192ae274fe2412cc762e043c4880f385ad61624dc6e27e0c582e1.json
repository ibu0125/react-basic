{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ibuki\\\\source\\\\myPortfolio\\\\src\\\\components\\\\pages\\\\AnimationPoints.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState, useCallback } from \"react\";\n// import { useLocation } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Canvas = () => {\n  _s();\n  const canvasRef = useRef(null);\n  const points = useRef([]);\n  const intervalRef = useRef(null);\n  const [mousePosition, setMousePosition] = useState({\n    x: 0,\n    y: 0\n  });\n  const [widthSize, setWidthSize] = useState(window.innerWidth);\n  // const location = useLocation();\n  const [pointCount, setPointCount] = useState(300);\n  const [heightSize, setHeightSize] = useState(document.documentElement.scrollHeight);\n\n  // let pointCount = 300;\n\n  // 初期化とアニメーションループの設定\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext(\"2d\");\n    const interval = 1000 / 60; // 60 FPS\n\n    // キャンバスの幅と高さを設定\n    canvas.width = widthSize;\n    canvas.height = heightSize;\n\n    // 点の初期化\n    const initPoints = () => {\n      points.current = [];\n      for (let i = 0; i < pointCount; i++) {\n        points.current.push({\n          x: Math.random() * widthSize,\n          y: Math.random() * heightSize,\n          dx: (Math.random() - 0.5) * 2,\n          // スピードを調整\n          dy: (Math.random() - 0.5) * 2,\n          // スピードを調整\n          originalDx: 0,\n          originalDy: 0\n        });\n      }\n    };\n\n    // アニメーションの描画\n    const update = () => {\n      ctx.clearRect(0, 0, widthSize, heightSize);\n\n      // 線の描画\n      ctx.strokeStyle = \"rgba(255,255,255,0.8)\";\n      ctx.lineWidth = 0.3;\n      ctx.beginPath();\n      for (let i = 0; i < points.current.length; i++) {\n        const point1 = points.current[i];\n        for (let j = i + 1; j < points.current.length; j++) {\n          const point2 = points.current[j];\n          const distance = Math.sqrt((point1.x - point2.x) ** 2 + (point1.y - point2.y) ** 2);\n          if (distance < 110) {\n            ctx.moveTo(point1.x, point1.y);\n            ctx.lineTo(point2.x, point2.y);\n          }\n        }\n      }\n      ctx.stroke();\n\n      // 点の描画\n      points.current.forEach(point => {\n        point.x += point.dx;\n        point.y += point.dy;\n\n        // 境界での反射\n        if (point.x < 0 || point.x > widthSize) point.dx *= -1;\n        if (point.y < 0 || point.y > heightSize) point.dy *= -1;\n\n        // 点の描画\n        ctx.beginPath();\n        ctx.arc(point.x, point.y, 2, 0, Math.PI * 2);\n        ctx.fillStyle = \"rgba(155,255,255,0.8)\";\n        ctx.fill();\n      });\n    };\n    initPoints();\n    intervalRef.current = setInterval(update, interval);\n\n    // クリーンアップ\n    return () => {\n      clearInterval(intervalRef.current);\n    };\n  }, [widthSize, heightSize, pointCount]);\n  const handleResizeHome = useCallback(() => {\n    const newWidthSize = window.innerWidth;\n    const newHeightSize = document.documentElement.scrollHeight;\n    setPointCount(300);\n    setWidthSize(newWidthSize);\n    setHeightSize(newHeightSize);\n  }, []);\n\n  // const handleResizeForm = useCallback(() => {\n  //   const newWidthSize = window.innerWidth;\n  //   const newHeightSize = window.innerHeight;\n\n  //   setPointCount(50);\n  //   setWidthSize(newWidthSize);\n  //   setHeightSize(newHeightSize);\n  // }, []);\n\n  useEffect(() => {\n    window.addEventListener(\"resize\", handleResizeHome);\n\n    // 初期サイズ設定\n    handleResizeHome();\n    return () => {\n      window.removeEventListener(\"resize\", handleResizeHome);\n    };\n  }, [handleResizeHome]);\n\n  // useEffect(() => {\n  //   const updateSize = () => {\n  //     // const isFormPage = location.pathname === \"/form\";\n\n  //     if (isFormPage) {\n  //       handleResizeForm();\n  //     } else {\n  //       setTimeout(() => {\n  //         handleResizeHome();\n  //       }, 0);\n  //     }\n  //   };\n\n  // ページが変更されたときにリサイズ処理を実行\n  // updateSize();\n\n  // 依存関係に location を含める\n  // }, [location, handleResizeForm, handleResizeHome]);\n\n  // マウス位置に基づいて点の動きを調整\n  useEffect(() => {\n    const adjustPointsBasedOnMouse = () => {\n      if (!points.current) return;\n      points.current.forEach(point => {\n        const distanceX = mousePosition.x - point.x;\n        const distanceY = mousePosition.y - point.y;\n        const distance = Math.sqrt(distanceX ** 2 + distanceY ** 2);\n        if (!point.originalDx && !point.originalDy) {\n          point.originalDx = point.dx;\n          point.originalDy = point.dy;\n        }\n\n        // 点がマウスに近い場合、速度を変更\n        if (distance < 120) {\n          const angle = Math.atan2(distanceY, distanceX);\n\n          // 速度を調整\n          point.dx -= Math.cos(angle) * 0.3;\n          point.dy -= Math.sin(angle) * 0.3;\n        } else if (distance > 120) {\n          // 点がマウスから離れた場合、速度を元に戻す\n          point.dx = point.originalDx;\n          point.dy = point.originalDy;\n\n          // 元の速度がランダムで再設定されることを防ぐ\n          point.originalDx = 0;\n          point.originalDy = 0;\n        }\n      });\n    };\n    adjustPointsBasedOnMouse();\n  }, [mousePosition]);\n\n  // マウスの動きを監視\n  useEffect(() => {\n    const handleMouseMove = event => {\n      setMousePosition({\n        x: event.pageX,\n        y: event.pageY\n      });\n    };\n    window.addEventListener(\"mousemove\", handleMouseMove);\n    return () => {\n      window.removeEventListener(\"mousemove\", handleMouseMove);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef,\n    style: {\n      display: \"block\"\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 190,\n    columnNumber: 10\n  }, this);\n};\n_s(Canvas, \"KI1UupTe8fnz0vAmv/IOfmihurU=\");\n_c = Canvas;\nexport default Canvas;\nvar _c;\n$RefreshReg$(_c, \"Canvas\");","map":{"version":3,"names":["React","useRef","useEffect","useState","useCallback","jsxDEV","_jsxDEV","Canvas","_s","canvasRef","points","intervalRef","mousePosition","setMousePosition","x","y","widthSize","setWidthSize","window","innerWidth","pointCount","setPointCount","heightSize","setHeightSize","document","documentElement","scrollHeight","canvas","current","ctx","getContext","interval","width","height","initPoints","i","push","Math","random","dx","dy","originalDx","originalDy","update","clearRect","strokeStyle","lineWidth","beginPath","length","point1","j","point2","distance","sqrt","moveTo","lineTo","stroke","forEach","point","arc","PI","fillStyle","fill","setInterval","clearInterval","handleResizeHome","newWidthSize","newHeightSize","addEventListener","removeEventListener","adjustPointsBasedOnMouse","distanceX","distanceY","angle","atan2","cos","sin","handleMouseMove","event","pageX","pageY","ref","style","display","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ibuki/source/myPortfolio/src/components/pages/AnimationPoints.js"],"sourcesContent":["import React, { useRef, useEffect, useState, useCallback } from \"react\";\r\n// import { useLocation } from \"react-router-dom\";\r\n\r\nconst Canvas = () => {\r\n  const canvasRef = useRef(null);\r\n  const points = useRef([]);\r\n  const intervalRef = useRef(null);\r\n  const [mousePosition, setMousePosition] = useState({ x: 0, y: 0 });\r\n  const [widthSize, setWidthSize] = useState(window.innerWidth);\r\n  // const location = useLocation();\r\n  const [pointCount, setPointCount] = useState(300);\r\n  const [heightSize, setHeightSize] = useState(\r\n    document.documentElement.scrollHeight\r\n  );\r\n\r\n  // let pointCount = 300;\r\n\r\n  // 初期化とアニメーションループの設定\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext(\"2d\");\r\n\r\n    const interval = 1000 / 60; // 60 FPS\r\n\r\n    // キャンバスの幅と高さを設定\r\n    canvas.width = widthSize;\r\n    canvas.height = heightSize;\r\n\r\n    // 点の初期化\r\n    const initPoints = () => {\r\n      points.current = [];\r\n      for (let i = 0; i < pointCount; i++) {\r\n        points.current.push({\r\n          x: Math.random() * widthSize,\r\n          y: Math.random() * heightSize,\r\n          dx: (Math.random() - 0.5) * 2, // スピードを調整\r\n          dy: (Math.random() - 0.5) * 2, // スピードを調整\r\n          originalDx: 0,\r\n          originalDy: 0,\r\n        });\r\n      }\r\n    };\r\n\r\n    // アニメーションの描画\r\n    const update = () => {\r\n      ctx.clearRect(0, 0, widthSize, heightSize);\r\n\r\n      // 線の描画\r\n      ctx.strokeStyle = \"rgba(255,255,255,0.8)\";\r\n      ctx.lineWidth = 0.3;\r\n      ctx.beginPath();\r\n      for (let i = 0; i < points.current.length; i++) {\r\n        const point1 = points.current[i];\r\n        for (let j = i + 1; j < points.current.length; j++) {\r\n          const point2 = points.current[j];\r\n          const distance = Math.sqrt(\r\n            (point1.x - point2.x) ** 2 + (point1.y - point2.y) ** 2\r\n          );\r\n          if (distance < 110) {\r\n            ctx.moveTo(point1.x, point1.y);\r\n            ctx.lineTo(point2.x, point2.y);\r\n          }\r\n        }\r\n      }\r\n      ctx.stroke();\r\n\r\n      // 点の描画\r\n      points.current.forEach((point) => {\r\n        point.x += point.dx;\r\n        point.y += point.dy;\r\n\r\n        // 境界での反射\r\n        if (point.x < 0 || point.x > widthSize) point.dx *= -1;\r\n        if (point.y < 0 || point.y > heightSize) point.dy *= -1;\r\n\r\n        // 点の描画\r\n        ctx.beginPath();\r\n        ctx.arc(point.x, point.y, 2, 0, Math.PI * 2);\r\n        ctx.fillStyle = \"rgba(155,255,255,0.8)\";\r\n        ctx.fill();\r\n      });\r\n    };\r\n\r\n    initPoints();\r\n    intervalRef.current = setInterval(update, interval);\r\n\r\n    // クリーンアップ\r\n    return () => {\r\n      clearInterval(intervalRef.current);\r\n    };\r\n  }, [widthSize, heightSize, pointCount]);\r\n\r\n  const handleResizeHome = useCallback(() => {\r\n    const newWidthSize = window.innerWidth;\r\n    const newHeightSize = document.documentElement.scrollHeight;\r\n\r\n    setPointCount(300);\r\n    setWidthSize(newWidthSize);\r\n    setHeightSize(newHeightSize);\r\n  }, []);\r\n\r\n  // const handleResizeForm = useCallback(() => {\r\n  //   const newWidthSize = window.innerWidth;\r\n  //   const newHeightSize = window.innerHeight;\r\n\r\n  //   setPointCount(50);\r\n  //   setWidthSize(newWidthSize);\r\n  //   setHeightSize(newHeightSize);\r\n  // }, []);\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"resize\", handleResizeHome);\r\n\r\n    // 初期サイズ設定\r\n    handleResizeHome();\r\n\r\n    return () => {\r\n      window.removeEventListener(\"resize\", handleResizeHome);\r\n    };\r\n  }, [handleResizeHome]);\r\n\r\n  // useEffect(() => {\r\n  //   const updateSize = () => {\r\n  //     // const isFormPage = location.pathname === \"/form\";\r\n\r\n  //     if (isFormPage) {\r\n  //       handleResizeForm();\r\n  //     } else {\r\n  //       setTimeout(() => {\r\n  //         handleResizeHome();\r\n  //       }, 0);\r\n  //     }\r\n  //   };\r\n\r\n  // ページが変更されたときにリサイズ処理を実行\r\n  // updateSize();\r\n\r\n  // 依存関係に location を含める\r\n  // }, [location, handleResizeForm, handleResizeHome]);\r\n\r\n  // マウス位置に基づいて点の動きを調整\r\n  useEffect(() => {\r\n    const adjustPointsBasedOnMouse = () => {\r\n      if (!points.current) return;\r\n\r\n      points.current.forEach((point) => {\r\n        const distanceX = mousePosition.x - point.x;\r\n        const distanceY = mousePosition.y - point.y;\r\n        const distance = Math.sqrt(distanceX ** 2 + distanceY ** 2);\r\n        if (!point.originalDx && !point.originalDy) {\r\n          point.originalDx = point.dx;\r\n          point.originalDy = point.dy;\r\n        }\r\n\r\n        // 点がマウスに近い場合、速度を変更\r\n        if (distance < 120) {\r\n          const angle = Math.atan2(distanceY, distanceX);\r\n\r\n          // 速度を調整\r\n          point.dx -= Math.cos(angle) * 0.3;\r\n          point.dy -= Math.sin(angle) * 0.3;\r\n        } else if (distance > 120) {\r\n          // 点がマウスから離れた場合、速度を元に戻す\r\n          point.dx = point.originalDx;\r\n          point.dy = point.originalDy;\r\n\r\n          // 元の速度がランダムで再設定されることを防ぐ\r\n          point.originalDx = 0;\r\n          point.originalDy = 0;\r\n        }\r\n      });\r\n    };\r\n\r\n    adjustPointsBasedOnMouse();\r\n  }, [mousePosition]);\r\n\r\n  // マウスの動きを監視\r\n  useEffect(() => {\r\n    const handleMouseMove = (event) => {\r\n      setMousePosition({ x: event.pageX, y: event.pageY });\r\n    };\r\n\r\n    window.addEventListener(\"mousemove\", handleMouseMove);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"mousemove\", handleMouseMove);\r\n    };\r\n  }, []);\r\n\r\n  return <canvas ref={canvasRef} style={{ display: \"block\" }} />;\r\n};\r\n\r\nexport default Canvas;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}