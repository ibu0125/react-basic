{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ibuki\\\\source\\\\myPortfolio\\\\src\\\\components\\\\pages\\\\AnimatedTextSide.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useEffect } from \"react\";\nimport { motion } from \"framer-motion\";\nimport \"./AnimatedTextSide.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AnimatedTextSide({\n  text\n}) {\n  _s();\n  const textRef = useRef(null);\n  const [isVisible, setIsVisible] = useState(true);\n  useEffect(() => {\n    const currentRef = textRef.current; // ref の値を変数にコピー\n\n    const observer = new IntersectionObserver(([entry]) => {\n      setIsVisible(entry.isIntersecting);\n    }, {\n      threshold: 0.1\n    } // 画面の10%が表示されていれば反応\n    );\n    if (currentRef) {\n      observer.observe(currentRef);\n    }\n    return () => {\n      if (currentRef) {\n        observer.unobserve(currentRef);\n      }\n    };\n  }, []); // 空の依存配列で、コンポーネントのマウント時とアンマウント時にのみ実行\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"animation-wrapper\",\n    ref: textRef,\n    children: text.split(\"\").map((char, index) => /*#__PURE__*/_jsxDEV(motion.span, {\n      className: \"text\",\n      initial: {\n        opacity: 0,\n        x: 200\n      },\n      animate: {\n        opacity: isVisible ? 1 : 0,\n        x: isVisible ? 0 : 200\n      },\n      transition: {\n        duration: 0.5,\n        delay: index * 0.1\n      },\n      children: char\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(AnimatedTextSide, \"CN+GD8IfY8m9HCK5vcxR5g6mq3Q=\");\n_c = AnimatedTextSide;\nexport default AnimatedTextSide;\nvar _c;\n$RefreshReg$(_c, \"AnimatedTextSide\");","map":{"version":3,"names":["React","useRef","useState","useEffect","motion","jsxDEV","_jsxDEV","AnimatedTextSide","text","_s","textRef","isVisible","setIsVisible","currentRef","current","observer","IntersectionObserver","entry","isIntersecting","threshold","observe","unobserve","className","ref","children","split","map","char","index","span","initial","opacity","x","animate","transition","duration","delay","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ibuki/source/myPortfolio/src/components/pages/AnimatedTextSide.js"],"sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\r\nimport { motion } from \"framer-motion\";\r\nimport \"./AnimatedTextSide.css\";\r\n\r\nfunction AnimatedTextSide({ text }) {\r\n  const textRef = useRef(null);\r\n  const [isVisible, setIsVisible] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const currentRef = textRef.current; // ref の値を変数にコピー\r\n\r\n    const observer = new IntersectionObserver(\r\n      ([entry]) => {\r\n        setIsVisible(entry.isIntersecting);\r\n      },\r\n      { threshold: 0.1 } // 画面の10%が表示されていれば反応\r\n    );\r\n\r\n    if (currentRef) {\r\n      observer.observe(currentRef);\r\n    }\r\n\r\n    return () => {\r\n      if (currentRef) {\r\n        observer.unobserve(currentRef);\r\n      }\r\n    };\r\n  }, []); // 空の依存配列で、コンポーネントのマウント時とアンマウント時にのみ実行\r\n\r\n  return (\r\n    <div className=\"animation-wrapper\" ref={textRef}>\r\n      {text.split(\"\").map((char, index) => (\r\n        <motion.span\r\n          key={index}\r\n          className=\"text\"\r\n          initial={{ opacity: 0, x: 200 }}\r\n          animate={{\r\n            opacity: isVisible ? 1 : 0,\r\n            x: isVisible ? 0 : 200,\r\n          }}\r\n          transition={{ duration: 0.5, delay: index * 0.1 }}\r\n        >\r\n          {char}\r\n        </motion.span>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AnimatedTextSide;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC1D,SAASC,MAAM,QAAQ,eAAe;AACtC,OAAO,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,SAASC,gBAAgBA,CAAC;EAAEC;AAAK,CAAC,EAAE;EAAAC,EAAA;EAClC,MAAMC,OAAO,GAAGT,MAAM,CAAC,IAAI,CAAC;EAC5B,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACd,MAAMU,UAAU,GAAGH,OAAO,CAACI,OAAO,CAAC,CAAC;;IAEpC,MAAMC,QAAQ,GAAG,IAAIC,oBAAoB,CACvC,CAAC,CAACC,KAAK,CAAC,KAAK;MACXL,YAAY,CAACK,KAAK,CAACC,cAAc,CAAC;IACpC,CAAC,EACD;MAAEC,SAAS,EAAE;IAAI,CAAC,CAAC;IACrB,CAAC;IAED,IAAIN,UAAU,EAAE;MACdE,QAAQ,CAACK,OAAO,CAACP,UAAU,CAAC;IAC9B;IAEA,OAAO,MAAM;MACX,IAAIA,UAAU,EAAE;QACdE,QAAQ,CAACM,SAAS,CAACR,UAAU,CAAC;MAChC;IACF,CAAC;EACH,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACEP,OAAA;IAAKgB,SAAS,EAAC,mBAAmB;IAACC,GAAG,EAAEb,OAAQ;IAAAc,QAAA,EAC7ChB,IAAI,CAACiB,KAAK,CAAC,EAAE,CAAC,CAACC,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBAC9BtB,OAAA,CAACF,MAAM,CAACyB,IAAI;MAEVP,SAAS,EAAC,MAAM;MAChBQ,OAAO,EAAE;QAAEC,OAAO,EAAE,CAAC;QAAEC,CAAC,EAAE;MAAI,CAAE;MAChCC,OAAO,EAAE;QACPF,OAAO,EAAEpB,SAAS,GAAG,CAAC,GAAG,CAAC;QAC1BqB,CAAC,EAAErB,SAAS,GAAG,CAAC,GAAG;MACrB,CAAE;MACFuB,UAAU,EAAE;QAAEC,QAAQ,EAAE,GAAG;QAAEC,KAAK,EAAER,KAAK,GAAG;MAAI,CAAE;MAAAJ,QAAA,EAEjDG;IAAI,GATAC,KAAK;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAUC,CACd;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAAC/B,EAAA,CA3CQF,gBAAgB;AAAAkC,EAAA,GAAhBlC,gBAAgB;AA6CzB,eAAeA,gBAAgB;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}